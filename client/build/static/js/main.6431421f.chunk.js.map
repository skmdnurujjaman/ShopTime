{"version":3,"sources":["assests/confirmation.png","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/orderReducers.js","constants/orderConstants.js","constants/routes.js","components/SearchBox/SearchBox.js","components/Header/index.js","components/Footer/Footer.js","config.js","services/token.js","utils/http.js","utils/string.js","services/Product.js","utils/error.js","actions/productAction.js","components/Rating/Rating.js","components/Product/Product.js","components/Filter/Filter.js","components/Message/errorMessage.js","components/Loader/HomeLoader.js","components/Meta/Meta.js","pages/Home.js","components/ProductReview/ProductReview.js","components/Loader/SinglePageLoader.js","actions/cartAction.js","pages/Product.js","components/FormContainer/FormContainer.js","components/table/tableLayout.js","services/user.js","actions/userAction.js","pages/Login.js","pages/Cart.js","routes/PrivateRoute.js","routes/AdminRoute.js","components/CheckoutStep/CheckoutSteps.js","pages/Shipping.js","pages/Payment.js","services/order.js","actions/orderAction.js","components/Loader/TableLoader.js","components/Print/Print.js","pages/Profile.js","pages/PlaceOrder.js","pages/OrdersList.js","components/Message/successMessage.js","pages/ProductList.js","pages/UserList.js","pages/EditUser.js","pages/EditProduct.js","components/InfoMessage/Message.js","components/Loader/Loader.js","components/Loader/OrderLoader.js","pages/Order.js","pages/Logout.js","pages/Register.js","pages/ForgotPassword.js","pages/ResetPassword.js","pages/EmailVerification.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","productList","state","products","action","type","loading","payload","results","count","success","error","Product","product","productReview","productReviews","data","userLogin","userInfo","userRegister","message","createReview","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","productId","map","filter","createOrder","order","orderDetails","orderPay","orderDeliver","authOrders","orders","total","orderList","deleteProduct","createProductDetails","updateProductDetails","userList","users","userDeleteDetails","userUpdateDetails","userDetails","user","forgotPasswordDetails","resetPasswordDetails","initialState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunk","LOGIN","PRODUCT","ORDER","PRODUCTS","USERS","SearchBox","useState","searchKey","setSearchKey","history","useHistory","Form","inline","onSubmit","e","preventDefault","push","pathname","FormControl","name","onChange","target","value","placeholder","className","Header","userAuthData","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","length","reduce","acc","qty","NavDropdown","title","Item","routes","role","Footer","Row","Col","config","baseURI","process","payPal","esewaImageUrl","esewaPaymentUrl","apiEndPoint","fetchProducts","fetchProduct","fetchProductReviews","createProduct","updateProduct","login","create","fetchUsers","verifyEmail","deleteUser","updateUser","fetchUser","forgotPassword","resetPassword","pay","deliverOrder","userOrder","getAccessToken","token","setToken","setItem","stringify","instance","axios","baseURL","headers","http","get","url","params","accessToken","responseType","authHeaders","tokenService","method","then","response","post","body","put","remove","interpolate","str","pinterpolate","filters","filterParams","Object","keys","forEach","key","hasOwnProperty","handleError","err","dispatch","productServices","Rating","text","color","style","defaultProps","Card","_id","Img","src","productImage","Body","Title","as","Text","averageRating","Reviews","price","useStyles","makeStyles","theme","typography","padding","spacing","formControl","margin","minWidth","top","selectEmpty","marginTop","Filtetr","sort","handleSort","setPriceRange","setLtORgt","ltORgt","handlePriceRange","handleFilters","classes","anchorEl","setAnchorEl","open","Boolean","undefined","Button","aria-describedby","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","FormControlLabel","control","Checkbox","checked","includes","inputProps","label","InputLabel","Select","labelId","MenuItem","TextField","autoComplete","required","ErrorMessage","header","reset","show","setShow","useDispatch","position","right","zIndex","Toast","delay","autohide","background","fontWeight","HomeLoader","Array","fill","index","sm","md","lg","xl","height","width","Meta","description","keywords","Helmet","content","Home","setSort","priceRange","setFilters","initialLoading","setInitialLoading","queryParams","URLSearchParams","window","location","search","searchProductKey","trim","useEffect","fetchProductList","join","productAction","filterPrevPrice","Filter","s","preState","prgressColor","ProductReview","setTitle","setText","rating","setRating","productReviewsData","reviewResponses","createReviewSuccess","createReviewLoading","ListGroup","review","userId","createdAt","substring","fullWidth","Number","autoWidth","disabled","CircularProgress","SinglePageLoader","addToCart","getState","payLoadForCartItem","productName","countInStock","left","ProductDetails","match","setQty","productData","createReviewError","Image","alt","fluid","FormContainer","children","xs","mainHeader","table","widths","bold","marginBottom","stack","email","layout","hLineWidth","line","vLineWidth","paddingBottom","bodyForOrders","headerRows","fillColor","o","i","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","bodyForUsers","u","verify","registerUser","Logout","removeItem","Login","setEmail","password","setPassword","redirect","split","redirectUserToRegisterRoute","userServices","authData","userAction","autoFocus","Cart","removeFromCartHandler","removeItemFromCart","rounded","toFixed","PrivateRoutes","Component","component","rest","render","props","AdminRoute","CheckoutSteps","step1","step2","step3","Shipping","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentMethod","setPaymentMethod","FormLabel","RadioGroup","aria-label","Radio","createPdfData","border","fontSize","alignment","styles","mainheader","info","marginLeft","h2","payOrder","orderId","paymentResult","orderServices","TableLoader","Table","striped","bordered","hover","responsive","Print","printAs","pdfMake","vfs","pdfFonts","Profile","console","log","docDefinition","createPdf","download","PlaceOrder","redirectUser","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","orderData","orderItems","shipping","payment","OrderList","SuccessMessage","ProductList","deleteProductData","deleteSuccess","deleteFail","createSuccess","createFail","createLoading","setName","setProductImage","brand","setBrand","setPrice","category","setCategory","setCountInStock","setDescription","openForm","setOpenForm","productListForAdmin","cancelCreateProduct","submitHandler","formData","FormData","append","deleteHandler","confirmAlert","customUI","Modal","size","aria-labelledby","centered","files","multiline","rows","openNewProductForm","UserList","userListDetails","userDelete","href","UpdateUser","updateLoading","updateError","updateSuccess","setRole","Success","setSuccess","updatedData","confirmationImg","ConfirmedAlert","EditProduct","EditProductLoading","EditProductError","EditProductSuccess","UpdatedData","Message","Alert","Loader","Spinner","animation","display","Order","setSdkReady","successPayMessage","loadingDeliver","successDeliver","refId","addPayPalScript","clientId","script","document","createElement","async","onload","appendChild","paypal","getOrder","OrderLoader","progressColor","Register","verificationMessage","setVerificationMessage","confirmPassword","setConfirmPassword","userRegisterData","setTimeout","handleSubmit","redirectUserToLoginRoute","ForgotPassword","newPassword","setNewPassword","resetPasswordData","EmailVerification","verificationCode","setVerificationCode","code","require","App","exact","path","ResetPassword","PrivateRoute","Payment","EditUser","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","getElementById","URL","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6431421f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/confirmation.31a737c5.png\";","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {\r\n  listProducts,\r\n  Product,\r\n  productReview,\r\n  createReview,\r\n  deleteProduct,\r\n  createProduct,\r\n  EditProduct,\r\n} from './reducers/productReducers';\r\n\r\nimport {\r\n  userLogin,\r\n  userRegister,\r\n  userList,\r\n  userDelete,\r\n  userUpdate,\r\n  getUser,\r\n  forgotPassword,\r\n  resetPassword,\r\n} from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  createOrderReducer,\r\n  getOrder,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  authOrders,\r\n  listOrders,\r\n} from './reducers/orderReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  productList: listProducts,\r\n  Product: Product,\r\n  productReview: productReview,\r\n  userLogin: userLogin,\r\n  userRegister: userRegister,\r\n  createReview: createReview,\r\n  cart: cartReducer,\r\n  createOrder: createOrderReducer,\r\n  orderDetails: getOrder,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  authOrders: authOrders,\r\n  orderList: listOrders,\r\n  deleteProduct: deleteProduct,\r\n  createProductDetails: createProduct,\r\n  updateProductDetails: EditProduct,\r\n  userList: userList,\r\n  userDeleteDetails: userDelete,\r\n  userUpdateDetails: userUpdate,\r\n  userDetails: getUser,\r\n  forgotPasswordDetails: forgotPassword,\r\n  resetPasswordDetails: resetPassword,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst paymentMethodAddressFromStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : '';\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethodAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import * as productConstants from '../constants/productConstants';\r\n\r\nexport const listProducts = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case productConstants.PRODUCTLIST_FETCH_START:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n    case productConstants.PRODUCTLIST_FETCH_SUCCESS:\r\n      return {\r\n        products: action.payload.results,\r\n        count: action.payload.count,\r\n        success: true,\r\n      };\r\n    case productConstants.PRODUCTLIST_FETCH_ERROR:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Product = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case productConstants.PRODUCT_FETCH_START:\r\n      return {\r\n        loading: true,\r\n        product: {},\r\n      };\r\n    case productConstants.PRODUCT_FETCH_SUCCESS:\r\n      return {\r\n        product: action.payload,\r\n        success: true,\r\n      };\r\n    case productConstants.PRODUCT_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReview = (state = { productReviews: [] }, action) => {\r\n  switch (action.type) {\r\n    case productConstants.PRODUCTREVIEW_FETCH_START:\r\n      return {\r\n        loading: true,\r\n        productReviews: [],\r\n      };\r\n    case productConstants.PRODUCTREVIEW_FETCH_SUCCESS:\r\n      return {\r\n        productReviews: action.payload.data,\r\n        count: action.payload.count,\r\n        success: true,\r\n      };\r\n    case productConstants.PRODUCT_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createReview = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.CREATE_REVIEW_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.CREATE_REVIEW_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.CREATE_REVIEW_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case productConstants.CREATE_REVIEW_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.DELETE_PRODUCT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.DELETE_PRODUCT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    case productConstants.DELETE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createProduct = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.CREATE_PRODUCT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.CREATE_PRODUCT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.CREATE_PRODUCT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    case productConstants.CREATE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const EditProduct = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.EDIT_PRODUCT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.EDIT_PRODUCT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.EDIT_PRODUCT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case productConstants.EDIT_PRODUCT_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const PRODUCTLIST_FETCH_START = 'PRODUCTLIST_FETCH_START';\r\nexport const PRODUCTLIST_FETCH_SUCCESS = 'PRODUCTLIST_FETCH_SUCCESS';\r\nexport const PRODUCTLIST_FETCH_ERROR = 'PRODUCTLIST_FETCH_ERROR';\r\n\r\nexport const PRODUCT_FETCH_START = 'PRODUCT_FETCH_START';\r\nexport const PRODUCT_FETCH_SUCCESS = 'PRODUCT_FETCH_SUCCESS';\r\nexport const PRODUCT_FETCH_FAIL = 'PRODUCT_FETCH_FAIL';\r\n\r\nexport const PRODUCTREVIEW_FETCH_START = 'PRODUCTREVIEW_FETCH_START';\r\nexport const PRODUCTREVIEW_FETCH_SUCCESS = 'PRODUCTREVIEW_FETCH_SUCCESS';\r\nexport const PRODUCTREVIEW_FETCH_FAIL = 'PRODUCTREVIEW_FETCH_FAIL';\r\n\r\nexport const CREATE_REVIEW_START = 'CREATE_REVIEW_START';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\nexport const DELETE_PRODUCT_START = 'DELETE_PRODUCT_START';\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS';\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET';\r\n\r\nexport const CREATE_PRODUCT_START = 'CREATE_PRODUCT_START';\r\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS';\r\nexport const CREATE_PRODUCT_FAIL = 'CREATE_PRODUCT_FAIL';\r\nexport const CREATE_PRODUCT_RESET = 'CREATE_PRODUCT_RESET';\r\n\r\nexport const EDIT_PRODUCT_START = 'EDIT_PRODUCT_START';\r\nexport const EDIT_PRODUCT_SUCCESS = 'EDIT_PRODUCT_SUCCESS';\r\nexport const EDIT_PRODUCT_FAIL = 'EDIT_PRODUCT_FAIL';\r\nexport const EDIT_PRODUCT_RESET = 'EDIT_PRODUCT_RESET';\r\n","import * as userConstants from '../constants/userConstants';\r\n\r\nexport const userLogin = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_AUTH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_AUTH_SUCCESS:\r\n      return {\r\n        userInfo: action.payload,\r\n        success: true,\r\n      };\r\n    case userConstants.USER_AUTH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegister = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_REGISTER_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_REGISTER_SUCCESS:\r\n      return {\r\n        message: action.payload,\r\n        success: true,\r\n      };\r\n    case userConstants.USER_REGISTER_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_REGISTER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userList = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USERLIST_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USERLIST_FETCH_SUCCESS:\r\n      return {\r\n        users: action.payload.results,\r\n        count: action.payload.count,\r\n        success: true,\r\n      };\r\n    case userConstants.USERLIST_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDelete = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_DELETE_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_DELETE_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case userConstants.USER_DELETE_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_DELETE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdate = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_EDIT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_EDIT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case userConstants.USER_EDIT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_EDIT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUser = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_FETCH_SUCCESS:\r\n      return {\r\n        success: true,\r\n        user: action.payload,\r\n      };\r\n    case userConstants.USER_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_FETCH_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (state = { message: '' }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.FORGOT_PASSWORD_SEND_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.FORGOT_PASSWORD_SEND_SUCCESS:\r\n      return {\r\n        success: true,\r\n        message: action.payload,\r\n      };\r\n    case userConstants.FORGOT_PASSWORD_SEND_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.FORGOT_PASSWORD_SEND_RSET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const resetPassword = (state = { message: '' }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.RESET_PASSWORD_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        success: true,\r\n        message: action.payload,\r\n      };\r\n    case userConstants.RESET_PASSWORD_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.RESET_PASSWORD_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_AUTH_START = 'USER_AUTH_START';\r\nexport const USER_AUTH_SUCCESS = 'USER_AUTH_SUCCESS';\r\nexport const USER_AUTH_FAIL = 'USER_AUTH_FAIL';\r\nexport const RESET = 'RESET';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const USER_REGISTER_START = 'USER_REGISTER_START';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\r\n\r\nexport const USERLIST_FETCH_START = 'USERLIST_FETCH_START';\r\nexport const USERLIST_FETCH_SUCCESS = 'USERLIST_FETCH_SUCCESS';\r\nexport const USERLIST_FETCH_FAIL = 'USERLIST_FETCH_FAIL';\r\n\r\nexport const USER_DELETE_START = 'USER_DELETE_START';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\r\n\r\nexport const USER_EDIT_START = 'USER_EDIT_START';\r\nexport const USER_EDIT_SUCCESS = 'USER_EDIT_SUCCESS';\r\nexport const USER_EDIT_FAIL = 'USER_EDIT_FAIL';\r\nexport const USER_EDIT_RESET = 'USER_EDIT_RESET';\r\n\r\nexport const USER_FETCH_START = 'USER_FETCH_START';\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS';\r\nexport const USER_FETCH_FAIL = 'USER_FETCH_FAIL';\r\nexport const USER_FETCH_RESET = 'USER_FETCH_RESET';\r\n\r\nexport const FORGOT_PASSWORD_SEND_START = 'FORGOT_PASSWORD_SEND_START';\r\nexport const FORGOT_PASSWORD_SEND_SUCCESS = 'FORGOT_PASSWORD_SEND_SUCCESS';\r\nexport const FORGOT_PASSWORD_SEND_FAIL = 'FORGOT_PASSWORD_SEND_FAIL';\r\nexport const FORGOT_PASSWORD_SEND_RSET = 'FORGOT_PASSWORD_SEND_RSET';\r\n\r\nexport const RESET_PASSWORD_START = 'RESET_PASSWORD_START';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_RESET = 'RESET_PASSWORD_RESET';\r\n","import * as cartConstants from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {}, paymentMethod: '' }, action) => {\r\n  switch (action.type) {\r\n    case cartConstants.ADD_TO_CART_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.productId === item.productId);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) => (x.productId === existItem.productId ? item : x)),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case cartConstants.CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.productId !== action.payload),\r\n      };\r\n    case cartConstants.CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case cartConstants.CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case cartConstants.CART_RESET:\r\n      return {\r\n        cartItems: [],\r\n        shippingAddress: {},\r\n        paymentMethod: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_TO_CART_ITEM = 'ADD_TO_CART_ITEM';\r\nexport const ADD_TO_CART_FAIL = 'ADD_TO_CART_FAIL';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\nexport const CART_RESET = 'CART_RESET';\r\n","import * as orderConstants from '../constants/orderConstants';\r\n\r\nexport const createOrderReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.CREATE_ORDER_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.CREATE_ORDER_SUCCESS:\r\n      return {\r\n        order: action.payload,\r\n        success: true,\r\n      };\r\n    case orderConstants.CREATE_ORDER_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case orderConstants.CREATE_ORDER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOrder = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_ORDER_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.GET_ORDER_SUCCESS:\r\n      return {\r\n        order: action.payload,\r\n        success: true,\r\n      };\r\n    case orderConstants.GET_ORDER_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.ORDER_PAY_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.ORDER_PAY_SUCCESS:\r\n      return {\r\n        success: action.payload,\r\n      };\r\n    case orderConstants.ORDER_PAY_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case orderConstants.ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.ORDER_DILIVERD_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.ORDER_DILIVERD_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case orderConstants.ORDER_DILIVERD_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case orderConstants.ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const authOrders = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.AUTH_ORDER_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.AUTH_ORDER_FETCH_SUCCESS:\r\n      return {\r\n        success: true,\r\n        orders: action.payload,\r\n        count: action.total,\r\n      };\r\n    case orderConstants.AUTH_ORDER_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listOrders = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.ORDERLIST_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.ORDERLIST_FETCH_SUCCESS:\r\n      return {\r\n        success: true,\r\n        orders: action.payload.results,\r\n        count: action.payload.count,\r\n      };\r\n    case orderConstants.ORDERLIST_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CREATE_ORDER_START = 'CREATE_ORDER_START';\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL';\r\nexport const CREATE_ORDER_RESET = 'CREATE_ORDER_RESET';\r\n\r\nexport const GET_ORDER_START = 'GET_ORDER_START';\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAIL = 'GET_ORDER_FAIL';\r\n\r\nexport const ORDER_PAY_START = 'ORDER_PAY_START';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_DILIVERD_START = 'ORDER_DILIVERD_START';\r\nexport const ORDER_DILIVERD_SUCCESS = 'ORDER_DILIVERD_SUCCESS';\r\nexport const ORDER_DILIVERD_FAIL = 'ORDER_DILIVERD_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n\r\nexport const AUTH_ORDER_FETCH_START = 'AUTH_ORDER_FETCH_START';\r\nexport const AUTH_ORDER_FETCH_SUCCESS = 'AUTH_ORDER_FETCH_SUCCESS';\r\nexport const AUTH_ORDER_FETCH_FAIL = 'AUTH_ORDER_FETCH_FAIL';\r\n\r\nexport const ORDERLIST_FETCH_START = 'ORDERLIST_FETCH_START';\r\nexport const ORDERLIST_FETCH_SUCCESS = 'ORDERLIST_FETCH_SUCCESS';\r\nexport const ORDERLIST_FETCH_FAIL = 'ORDERLIST_FETCH_FAIL';\r\n","export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const RESET_PASSWORD = '/reset-password';\r\nexport const FORGOT_PASSWORD = '/forgot-passsword';\r\nexport const EMAIL_VERIFICATION = '/email-verification';\r\nexport const LOGOUT = '/logout';\r\nexport const REGISTER = '/register';\r\nexport const PRODUCT = '/product/:productId';\r\nexport const CART = '/cart';\r\nexport const SHIPPING = '/shipping';\r\nexport const PAYMENT = '/payment';\r\nexport const PLACE_ORDER = '/place-order';\r\nexport const ORDER = '/order/:orderId';\r\nexport const PROFILE = '/profile';\r\nexport const ORDERS = '/admin/order-list';\r\nexport const PRODUCTS = '/admin/product-list';\r\nexport const PRODUCT_EDIT = '/admin/product/:productId/edit';\r\nexport const USERS = '/admin/user-list';\r\nexport const USER_EDIT = '/admin/user/:userId/edit';\r\n","import React, { useState } from 'react';\r\nimport { Form, FormControl } from 'react-bootstrap';\r\nimport * as routes from '../../constants/routes';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../style.css';\r\nconst SearchBox = () => {\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (searchKey !== '') {\r\n      history.push(`/?search=${searchKey}`);\r\n    } else {\r\n      history.push({\r\n        pathname: routes.HOME,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form inline onSubmit={handleSubmit}>\r\n      <FormControl\r\n        type=\"text\"\r\n        name=\"seacrh\"\r\n        onChange={(e) => setSearchKey(e.target.value)}\r\n        placeholder=\"Search product...\"\r\n        className=\"mr-sm-2\"\r\n      />\r\n      <i className=\"fas fa-search\"></i>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\nimport * as routes from '../../constants/routes';\r\nimport '../style.css';\r\n\r\nconst Header = () => {\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { cartItems } = cart;\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to={routes.HOME}>\r\n            <Navbar.Brand>ShopTime</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to={routes.CART}>\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>{' '}\r\n                  {cartItems.length > 0 && (\r\n                    <span className=\"cart\">{cartItems.reduce((acc, item) => acc + item.qty, 0)}</span>\r\n                  )}\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to={routes.PROFILE}>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to={routes.LOGOUT}>\r\n                    <NavDropdown.Item>Logout</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to={routes.LOGIN}>\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.role === 'admin' && (\r\n                <NavDropdown title=\"Admin\" id=\"adminMenu\">\r\n                  <LinkContainer to={routes.USERS}>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to={routes.PRODUCTS}>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to={routes.ORDERS}>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; ShopTime</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/**\r\n * Application wide configuration\r\n */\r\nconst config = {\r\n  baseURI: process.env.REACT_APP_API_BASE_URL,\r\n  payPal: process.env.REACT_APP_API_PAYPAL,\r\n  esewaImageUrl: process.env.REACT_APP_ESEWA_IMAGE_URL,\r\n  esewaPaymentUrl: process.env.REACT_APP_ESEWA_PAYMENT_URL,\r\n  apiEndPoint: {\r\n    product: {\r\n      fetchProducts: '/product',\r\n      fetchProduct: '/product/:id',\r\n      fetchProductReviews: '/product/:id/reviews',\r\n      createReview: '/product/:id/reviews',\r\n      deleteProduct: '/product/:id',\r\n      createProduct: '/product',\r\n      updateProduct: '/product/:id',\r\n    },\r\n    user: {\r\n      login: '/auth/login',\r\n      create: '/auth/register',\r\n      fetchUsers: '/user',\r\n      verifyEmail: '/auth/verify-email',\r\n      deleteUser: '/user/:id',\r\n      updateUser: '/user/:id',\r\n      fetchUser: '/user/:id',\r\n      forgotPassword: '/auth/forgot-password',\r\n      resetPassword: '/auth/reset-password',\r\n    },\r\n    order: {\r\n      createOrder: '/order',\r\n      order: '/order/:id',\r\n      pay: '/order/:id/pay',\r\n      deliverOrder: '/order/:id/deliver',\r\n      userOrder: '/order/auth-orders',\r\n      orders: '/order',\r\n    },\r\n  },\r\n};\r\n\r\nexport default config;\r\n","/**\r\n *\r\n * @returns {Stirng}\r\n */\r\nexport function getAccessToken() {\r\n  return JSON.parse(localStorage.getItem('userInfo'))?.token || '';\r\n}\r\n\r\n/**\r\n * Remove token from local storage\r\n */\r\nexport function removeToken() {\r\n  localStorage.removeItem('userInfo');\r\n}\r\n\r\n/**\r\n * Set token in local storage\r\n */\r\nexport function setToken(userInfo) {\r\n  localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n}\r\n","import axios from 'axios';\r\nimport config from '../config';\r\nimport * as tokenService from '../services/token';\r\n\r\nconst instance = axios.create({\r\n  baseURL: config.baseURI,\r\n  headers: {\r\n    'Content-type': 'application/json',\r\n  },\r\n});\r\n\r\n/**\r\n *\r\n * @param {String} url The url fro the api request (without the base)\r\n * @param {Object} [config]\r\n * @param {Object} [config.params] An object of queries that will be added to\r\n * @param {Boolean} [config.accessToken] Whether or not to include\r\n * access-token header\r\n * @returns {Promise}\r\n */\r\nfunction get(url, { params = {}, accessToken = false, responseType = 'json', headers = {} } = {}) {\r\n  const authHeaders = {};\r\n\r\n  if (accessToken) {\r\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\r\n  }\r\n\r\n  return instance({\r\n    url,\r\n    params,\r\n    responseType,\r\n    method: 'get',\r\n    headers: { ...authHeaders, ...headers },\r\n  }).then((response) => response);\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} url The url fro the api request (without the base)\r\n * @param {Object} [config]\r\n * @param {Object} [config.params] An object of queries that will be added to\r\n * @param {Object} [config.body] An object that will be sent in the request\r\n * @param {Boolean} [config.accessToken] Whether or not to include\r\n * access-token header\r\n * @returns {Promise}\r\n */\r\nfunction post(url, { params = {}, body = {}, accessToken = false, headers = {} } = {}) {\r\n  const authHeaders = {};\r\n\r\n  if (accessToken) {\r\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\r\n  }\r\n\r\n  return instance({\r\n    url,\r\n    params,\r\n    data: body,\r\n    method: 'post',\r\n    headers: { ...authHeaders, ...headers },\r\n  }).then((response) => response);\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} url The url fro the api request (without the base)\r\n * @param {Object} [config]\r\n * @param {Object} [config.params] An object of queries that will be added to\r\n * @param {Object} [config.body] An object that will be sent in the request\r\n * @param {Boolean} [config.accessToken] Whether or not to include\r\n * access-token header\r\n * @returns {Promise}\r\n */\r\nfunction put(url, { params = {}, body = {}, accessToken = false, headers = {} } = {}) {\r\n  const authHeaders = {};\r\n\r\n  if (accessToken) {\r\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\r\n  }\r\n\r\n  return instance({\r\n    url,\r\n    params,\r\n    data: body,\r\n    method: 'put',\r\n    headers: { ...authHeaders, ...headers },\r\n  }).then((response) => response);\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} url The url fro the api request (without the base)\r\n * @param {Object} [config]\r\n * @param {Object} [config.params] An object of queries that will be added to\r\n * @param {Boolean} [config.accessToken] Whether or not to include\r\n * access-token header\r\n * @returns {Promise}\r\n */\r\nfunction remove(url, { params = {}, accessToken = false, headers = {} } = {}) {\r\n  const authHeaders = {};\r\n\r\n  if (accessToken) {\r\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\r\n  }\r\n\r\n  return instance({\r\n    url,\r\n    params,\r\n    method: 'delete',\r\n    headers: { ...authHeaders, ...headers },\r\n  }).then((response) => response);\r\n}\r\n\r\nconst http = {\r\n  ...instance,\r\n  get,\r\n  post,\r\n  put,\r\n  remove,\r\n};\r\n\r\nexport default http;\r\n","import pinterpolate from 'pinterpolate';\r\n\r\n/**\r\n *\r\n * @param {String} str\r\n * @param {Object} params\r\n * @returns {String}\r\n * example interpolate('product/:id',{id:2})\r\n * => 'product/2'\r\n */\r\nexport const interpolate = (str, params) => pinterpolate(str, params);\r\n","import config from '../config';\r\nimport http from '../utils/http';\r\nimport { interpolate } from '../utils/string';\r\n\r\n/**\r\n *\r\n * @param {Object} filters\r\n * @returns {Array} data\r\n */\r\nexport const fetchProducts = async (filters) => {\r\n  const { data } = await http.get(config.apiEndPoint.product.fetchProducts, {\r\n    params: {\r\n      ...filters,\r\n    },\r\n  });\r\n  return data.data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const fetchProduct = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.product.fetchProduct, { id: id });\r\n\r\n  const { data } = await http.get(url);\r\n\r\n  return data.data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\n\r\nexport const fetchProductReviews = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.product.fetchProductReviews, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.get(url);\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const createReview = async (id, body) => {\r\n  const url = interpolate(config.apiEndPoint.product.createReview, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.post(url, {\r\n    body,\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const deleteProduct = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.product.deleteProduct, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.remove(url, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} body\r\n * @returns {Object} data\r\n */\r\nexport const createProduct = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.product.createProduct, {\r\n    body,\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const updateProduct = async (id, body) => {\r\n  const url = interpolate(config.apiEndPoint.product.updateProduct, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.put(url, {\r\n    body,\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} filters\r\n */\r\nexport const filterParams = (filters) => {\r\n  Object.keys(filters).forEach((key) => {\r\n    if (filters.hasOwnProperty(key)) {\r\n      if (filters[key] === '') {\r\n        delete filters[key];\r\n      }\r\n    }\r\n  });\r\n};\r\n","/**\r\n *\r\n * @param {Object} err\r\n * @returns {String}\r\n */\r\nexport const handleError = (err) => {\r\n  if (err.response) {\r\n    if (err.response.data.error) {\r\n      return err.response.data.error;\r\n    } else {\r\n      return 'Somethind went wrong!';\r\n    }\r\n  } else {\r\n    return err.message;\r\n  }\r\n};\r\n","import * as productServices from '../services/Product';\r\nimport { handleError } from '../utils/error';\r\nimport * as productConstants from '../constants/productConstants';\r\n\r\nexport const productList = (filters, initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: productConstants.PRODUCTLIST_FETCH_START });\r\n    }\r\n\r\n    productServices.filterParams(filters);\r\n\r\n    const { results, count } = await productServices.fetchProducts(filters);\r\n\r\n    dispatch({\r\n      type: productConstants.PRODUCTLIST_FETCH_SUCCESS,\r\n      payload: { results, count },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.PRODUCTLIST_FETCH_ERROR,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const productListForAdmin = (initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: productConstants.PRODUCTLIST_FETCH_START });\r\n    }\r\n\r\n    const { results, count } = await productServices.fetchProducts({});\r\n\r\n    dispatch({\r\n      type: productConstants.PRODUCTLIST_FETCH_SUCCESS,\r\n      payload: { results, count },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.PRODUCTLIST_FETCH_ERROR,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const product = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: productConstants.PRODUCT_FETCH_START });\r\n\r\n    const data = await productServices.fetchProduct(id);\r\n\r\n    dispatch({\r\n      type: productConstants.PRODUCT_FETCH_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.PRODUCT_FETCH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const productReviews = (id, initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: productConstants.PRODUCTREVIEW_FETCH_START });\r\n    }\r\n\r\n    const { data, count } = await productServices.fetchProductReviews(id);\r\n\r\n    dispatch({\r\n      type: productConstants.PRODUCTREVIEW_FETCH_SUCCESS,\r\n      payload: {\r\n        data,\r\n        count,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.PRODUCTREVIEW_FETCH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const createReview = (id, title, text, rating) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: productConstants.CREATE_REVIEW_START });\r\n\r\n    const body = {\r\n      title,\r\n      text,\r\n      rating,\r\n    };\r\n\r\n    await productServices.createReview(id, body);\r\n\r\n    dispatch({\r\n      type: productConstants.CREATE_REVIEW_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.CREATE_REVIEW_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: productConstants.DELETE_PRODUCT_START });\r\n\r\n    await productServices.deleteProduct(id);\r\n\r\n    dispatch({\r\n      type: productConstants.DELETE_PRODUCT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.DELETE_PRODUCT_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: productConstants.CREATE_PRODUCT_START });\r\n\r\n    await productServices.createProduct(formData);\r\n\r\n    dispatch({\r\n      type: productConstants.CREATE_PRODUCT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.CREATE_PRODUCT_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const EditProduct = (id, UpdatedData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: productConstants.EDIT_PRODUCT_START });\r\n\r\n    await productServices.updateProduct(id, UpdatedData);\r\n\r\n    dispatch({\r\n      type: productConstants.EDIT_PRODUCT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: productConstants.EDIT_PRODUCT_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from '../Rating/Rating';\r\nimport * as routes from '../../constants/routes';\r\nimport { interpolate } from '../../utils/string';\r\nimport 'animate.css';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded  animate__animated animate__fadeInUp\">\r\n      <Link to={interpolate(routes.PRODUCT, { productId: product._id })}>\r\n        <Card.Img src={product.productImage} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={interpolate(routes.PRODUCT, { productId: product._id })}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <Rating value={product.averageRating} text={`${product.Reviews ? product.Reviews.length : 0} reviews`} />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    top: -24,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Filtetr({ sort, handleSort, setPriceRange, setLtORgt, ltORgt, handlePriceRange, handleFilters, filters }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        Filter\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          <h6>Sort By</h6>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={sort.includes('name')}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                value=\"name\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              />\r\n            }\r\n            label=\"Name\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={sort.includes('price')}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                value=\"price\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              />\r\n            }\r\n            label=\"Price\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={sort.includes('averageRating')}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                value=\"averageRating\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              />\r\n            }\r\n            label=\"Rating\"\r\n          />\r\n\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              onChange={(e) => handleFilters('category', e.target.value)}\r\n              label=\"Category\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Eyeglasses\">Eyeglasses</MenuItem>\r\n              <MenuItem value=\"Sunglasses\">Sunglasses</MenuItem>\r\n              <MenuItem value=\"Computer Glasses\">Computer Glasses</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <div className=\"mt-4 mb-4\">\r\n            <TextField\r\n              autoComplete=\"priceRange\"\r\n              name=\"priceRange\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              required\r\n              id=\"priceRange\"\r\n              placeholder=\"Price Range\"\r\n              label=\"Price Range\"\r\n              onChange={(e) => setPriceRange(e.target.value)}\r\n            />{' '}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={ltORgt === 'lt'}\r\n                  color=\"primary\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                  value=\"lt\"\r\n                  onChange={(e) => setLtORgt(e.target.value)}\r\n                />\r\n              }\r\n              label=\"Less than\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={ltORgt === 'gte'}\r\n                  color=\"primary\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                  value=\"gte\"\r\n                  onChange={(e) => setLtORgt(e.target.value)}\r\n                />\r\n              }\r\n              label=\"Greater Or equal to\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handlePriceRange}>\r\n              Done\r\n            </Button>\r\n          </div>\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\nexport default Filtetr;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Toast } from 'react-bootstrap';\r\nimport 'animate.css';\r\n\r\nconst ErrorMessage = ({ header, message, reset }) => {\r\n  const [show, setShow] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const action = () => {\r\n    if (reset) {\r\n      dispatch({ type: reset });\r\n    }\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'fixed', right: '0', zIndex: '20180210' }}>\r\n        <Toast onClose={action} show={show} delay={3000} autohide className=\"animate__animated animate__shakeX\">\r\n          <Toast.Header style={{ background: 'red', color: 'white', fontWeight: 'bold' }}>\r\n            <strong className=\"mr-auto\">{header}</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>{message}</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst HomeLoader = () => {\r\n  return (\r\n    <Row>\r\n      {Array(8)\r\n        .fill()\r\n        .map((item, index) => {\r\n          return (\r\n            <Col key={index} sm={12} md={6} lg={4} xl={3}>\r\n              <Card className=\"my-3 p-3 rounded\">\r\n                <Card.Body>\r\n                  <SkeletonTheme color=\"lightGray\">\r\n                    <Skeleton height={180} width={'100%'} />\r\n                    <br />\r\n\r\n                    <Skeleton width={`60%`} />\r\n                    <br />\r\n\r\n                    <Skeleton width={`90%`} />\r\n                  </SkeletonTheme>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HomeLoader;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ShopTime',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'clothes, buy readyMadeClothes, cheap latest clothes',\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport * as productAction from '../actions/productAction';\r\nimport Product from '../components/Product/Product';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport HomeLoader from '../components/Loader/HomeLoader';\r\nimport Meta from '../components/Meta/Meta';\r\nimport * as routes from '../constants/routes';\r\n\r\nconst Home = () => {\r\n  const [sort, setSort] = useState([]);\r\n  const [priceRange, setPriceRange] = useState('');\r\n  const [ltORgt, setLtORgt] = useState('');\r\n  const [filters, setFilters] = useState({});\r\n\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n\r\n  const { loading, products, count, error, success } = productList;\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const searchProductKey = queryParams.get('search') ? queryParams.get('search').trim() : '';\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilters = (key, value) => {\r\n    setFilters({ ...filters, [key]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    } else {\r\n      fetchProductList();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, filters, success]);\r\n\r\n  useEffect(() => {\r\n    handleFilters('keyWord', searchProductKey);\r\n    // eslint-disable-next-line\r\n  }, [searchProductKey]);\r\n\r\n  useEffect(() => {\r\n    handleFilters('sort', sort.join(','));\r\n    // eslint-disable-next-line\r\n  }, [sort]);\r\n\r\n  const fetchProductList = () => {\r\n    dispatch(\r\n      productAction.productList(\r\n        {\r\n          ...filters,\r\n        },\r\n        initialLoading\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleSort = (value) => {\r\n    sort.includes(value) ? setSort(sort.filter((s) => s !== value)) : setSort((preState) => [...preState, value]);\r\n  };\r\n\r\n  const handlePriceRange = () => {\r\n    if ([priceRange, ltORgt].includes('')) {\r\n      return;\r\n    }\r\n    filterPrevPrice();\r\n    handleFilters(`price[${ltORgt}]`, priceRange);\r\n  };\r\n\r\n  const filterPrevPrice = () => {\r\n    const filterprice = Object.keys(filters).filter((price) => ['price[lt]', 'price[gte]'].includes(price));\r\n    filterprice.forEach((price) => {\r\n      if (filters[price]) {\r\n        delete filters[price];\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {loading ? (\r\n        <HomeLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          {searchProductKey ? (\r\n            <>\r\n              <Link to={routes.HOME} className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1>\r\n                Search Products for {searchProductKey}({count})\r\n              </h1>\r\n            </>\r\n          ) : (\r\n            <div className=\"clearfix\">\r\n              <span className=\"float-left\">\r\n                <h1>Latest Products ({count})</h1>\r\n              </span>\r\n              <span className=\"float-right\">\r\n                {' '}\r\n                <Filter\r\n                  sort={sort}\r\n                  handleSort={handleSort}\r\n                  setPriceRange={setPriceRange}\r\n                  setLtORgt={setLtORgt}\r\n                  ltORgt={ltORgt}\r\n                  handlePriceRange={handlePriceRange}\r\n                  handleFilters={handleFilters}\r\n                  filters={filters}\r\n                />\r\n              </span>\r\n            </div>\r\n          )}\r\n          {!products.length && <h4>No Products</h4>}\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, ListGroup, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as productAction from '../../actions/productAction';\r\nimport ErrorMessage from '../Message/errorMessage';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from '../Rating/Rating';\r\nimport {\r\n  Select,\r\n  Button,\r\n  FormControl,\r\n  makeStyles,\r\n  MenuItem,\r\n  InputLabel,\r\n  TextField,\r\n  CircularProgress,\r\n} from '@material-ui/core/';\r\n\r\nimport * as productConstants from '../../constants/productConstants';\r\nimport * as routes from '../../constants/routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ProductReview = ({ productId }) => {\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [rating, setRating] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const productReviewsData = useSelector((state) => state.productReview);\r\n  const reviewResponses = useSelector((state) => state.createReview);\r\n\r\n  const { success: createReviewSuccess, loading: createReviewLoading } = reviewResponses;\r\n\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  const { loading, productReviews, count, error, success } = productReviewsData;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (createReviewSuccess) {\r\n      setTitle('');\r\n      setText('');\r\n      setRating('');\r\n      dispatch({ type: productConstants.CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(productAction.productReviews(productId, initialLoading));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, createReviewSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const handleCreateReview = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(productAction.createReview(productId, title, text, rating));\r\n  };\r\n\r\n  return loading ? (\r\n    <p>Loding....</p>\r\n  ) : error ? (\r\n    <ErrorMessage header=\"Something went wrong\" message={error} />\r\n  ) : (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <h2>Reviews({count})</h2>\r\n          {!productReviews.length && <h4>No Reviews</h4>}\r\n          <ListGroup variant=\"flush\">\r\n            {productReviews.map((review) => (\r\n              <ListGroup.Item key={review._id}>\r\n                <strong>{review.userId.name}</strong>\r\n\r\n                <Rating value={review.rating} />\r\n                <p>{review.createdAt.substring(0, 10)}</p>\r\n                <p>{review.text}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n            <ListGroup.Item>\r\n              <h2>Write a Customer Review</h2>\r\n\r\n              {userInfo ? (\r\n                <Form onSubmit={handleCreateReview}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    placeholder=\"Write a title\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Write a title\"\r\n                    name=\"title\"\r\n                    autoComplete=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    placeholder=\"Write a comment\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"comment\"\r\n                    label=\"Write a comment\"\r\n                    name=\"comment\"\r\n                    autoComplete=\"comment\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                  />\r\n\r\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Rating</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-outlined-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      onChange={(e) => setRating(Number(e.target.value))}\r\n                      label=\"Rating\"\r\n                      autoWidth\r\n                      value={rating}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value=\"1\">1 - Poor</MenuItem>\r\n                      <MenuItem value=\"2\">2 - Fair</MenuItem>\r\n                      <MenuItem value=\"3\">3 - Good</MenuItem>\r\n                      <MenuItem value=\"4\">4 - Very Good</MenuItem>\r\n                      <MenuItem value=\"5\">5 - Excellent</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <div className=\"my-3\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={createReviewLoading}>\r\n                      {createReviewLoading ? (\r\n                        <CircularProgress color=\"inherit\" className={classes.prgressColor} />\r\n                      ) : (\r\n                        <>Submit</>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              ) : (\r\n                <>\r\n                  Please <Link to={routes.LOGIN}>sign in</Link> to write a review{' '}\r\n                </>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductReview;\r\n","import React from 'react';\r\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst SinglePageLoader = () => {\r\n  return (\r\n    <Row>\r\n      <Col md={6}>\r\n        <SkeletonTheme color=\"lightGray\">\r\n          <Skeleton height={350} width={'100%'} />\r\n        </SkeletonTheme>\r\n      </Col>\r\n      <Col md={3}>\r\n        <ListGroup variant=\"flush\">\r\n          {Array(7)\r\n            .fill()\r\n            .map((data, index) => (\r\n              <ListGroup.Item key={index}>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </ListGroup.Item>\r\n            ))}\r\n        </ListGroup>\r\n      </Col>\r\n      <Col md={3}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            {Array(4)\r\n              .fill()\r\n              .map((data, index) => (\r\n                <ListGroup.Item key={index}>\r\n                  <SkeletonTheme color=\"lightGray\">\r\n                    <Skeleton />\r\n                  </SkeletonTheme>\r\n                </ListGroup.Item>\r\n              ))}\r\n            <ListGroup.Item>\r\n              <SkeletonTheme color=\"lightGray\">\r\n                <Skeleton height={30} />\r\n              </SkeletonTheme>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SinglePageLoader;\r\n","import * as productServices from '../services/Product';\r\nimport { handleError } from '../utils/error';\r\nimport * as cartConstants from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const data = await productServices.fetchProduct(id);\r\n\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_ITEM,\r\n      payload: payLoadForCartItem(data, qty),\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const payLoadForCartItem = (data, qty) => {\r\n  return {\r\n    productId: data._id,\r\n    productName: data.name,\r\n    productImage: data.productImage,\r\n    price: data.price,\r\n    countInStock: data.countInStock,\r\n    qty,\r\n  };\r\n};\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: cartConstants.CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: cartConstants.CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: cartConstants.CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Card } from 'react-bootstrap';\r\nimport * as productAction from '../actions/productAction';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport ProductReview from '../components/ProductReview/ProductReview';\r\nimport Rating from '../components/Rating/Rating';\r\nimport { Select, Button, FormControl, makeStyles, MenuItem } from '@material-ui/core/';\r\nimport * as productConstants from '../constants/productConstants';\r\nimport SinglePageLoader from '../components/Loader/SinglePageLoader';\r\nimport { addToCart } from '../actions/cartAction';\r\nimport * as routes from '../constants/routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 85,\r\n    top: -17,\r\n    left: 6,\r\n    position: 'absolute',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ProductDetails = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const productData = useSelector((state) => state.Product);\r\n  const reviewResponses = useSelector((state) => state.createReview);\r\n\r\n  const { error: createReviewError } = reviewResponses;\r\n\r\n  const { loading, product, error } = productData;\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productAction.product(match.params.productId));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.productId, qty));\r\n    history.push(routes.CART);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {createReviewError && (\r\n        <ErrorMessage header=\"Opps!!!\" message={createReviewError} reset={productConstants.CREATE_REVIEW_RESET} />\r\n      )}\r\n      <Link className=\"btn btn-light my-3\" to={routes.HOME}>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <SinglePageLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.productImage} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.averageRating}\r\n                    text={`${product.Reviews ? product.Reviews.length : 0} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>{product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <FormControl className={classes.formControl}>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              onChange={(e) => setQty(e.target.value)}\r\n                              label=\"Qty\"\r\n                              value={qty}\r\n                            >\r\n                              {[...Array(product.countInStock).keys()].map((x) => (\r\n                                <MenuItem key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={addToCartHandler}\r\n                      fullWidth\r\n                      disabled={!product.countInStock}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <ProductReview productId={match.params.productId} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","export const mainHeader = (userInfo) => {\r\n  return {\r\n    table: {\r\n      widths: ['auto', '*'],\r\n\r\n      body: [\r\n        [\r\n          {\r\n            text: 'SHOPTIME',\r\n            style: 'mainheader',\r\n            bold: true,\r\n            marginTop: 10,\r\n          },\r\n\r\n          {\r\n            width: '*',\r\n            style: 'info',\r\n            marginBottom: 30,\r\n            stack: [\r\n              {\r\n                style: 'h2',\r\n                text: `Name: ${userInfo.name}`,\r\n              },\r\n              {\r\n                style: 'h2',\r\n                text: `Email: ${userInfo.email}`,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n    layout: {\r\n      hLineWidth: function (line) {\r\n        return line === 1;\r\n      },\r\n      vLineWidth: function () {\r\n        return 0;\r\n      },\r\n      paddingBottom: function () {\r\n        return 5;\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const bodyForOrders = (orders) => {\r\n  return {\r\n    headerRows: 1,\r\n    body: [\r\n      [\r\n        {\r\n          text: 'S.No',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'ID',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'USER',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'DATE',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'TOTAL PRICE',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'PAID',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'DELIVERED',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n      ],\r\n\r\n      ...orders.map((o, i) => [\r\n        i + 1,\r\n        o._id,\r\n        o.userId && o.userId.name,\r\n        o.createdAt.substring(0, 10),\r\n        o.totalPrice,\r\n        o.isPaid ? o.paidAt.substring(0, 10) : 'Not paid',\r\n        o.isDelivered ? o.deliveredAt.substring(0, 10) : 'Not paid',\r\n      ]),\r\n    ],\r\n  };\r\n};\r\n\r\nexport const bodyForUsers = (users) => {\r\n  return {\r\n    headerRows: 1,\r\n    body: [\r\n      [\r\n        {\r\n          text: 'S.No',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'ID',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'NAME',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'EMAIL',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'VERIFIED',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'ROLE',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n        {\r\n          text: 'DATE',\r\n          bold: true,\r\n          fillColor: '#2B2B52',\r\n          color: 'white',\r\n        },\r\n      ],\r\n\r\n      ...users.map((u, i) => [\r\n        i + 1,\r\n        u._id,\r\n        u.name,\r\n        u.email,\r\n        u.verify ? 'Verified' : 'Not paid',\r\n        u.role,\r\n        u.createdAt.substring(0, 10),\r\n      ]),\r\n    ],\r\n  };\r\n};\r\n\r\nexport const tableStyles = () => {\r\n  return {\r\n    header: {\r\n      fontSize: 12,\r\n      marginBottom: 20,\r\n      marginTop: 20,\r\n      bold: true,\r\n    },\r\n    mainheader: {\r\n      fontSize: 15,\r\n    },\r\n\r\n    info: {\r\n      marginLeft: 315,\r\n    },\r\n\r\n    h2: {\r\n      marginTop: 5,\r\n      fontSize: 7,\r\n    },\r\n  };\r\n};\r\n","import { mainHeader, bodyForUsers, tableStyles } from '../components/table/tableLayout';\r\nimport config from '../config';\r\nimport http from '../utils/http';\r\nimport { interpolate } from '../utils/string';\r\n\r\n/**\r\n *\r\n * @returns {Object} data\r\n */\r\nexport const fetchUsers = async () => {\r\n  const { data } = await http.get(config.apiEndPoint.user.fetchUsers, {\r\n    accessToken: true,\r\n  });\r\n  return data.data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const fetchUser = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.user.fetchUser, { id: id });\r\n\r\n  const { data } = await http.get(url, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data.data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} body\r\n * @returns {Object} data\r\n */\r\n\r\nexport const forgotPassword = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.user.forgotPassword, {\r\n    body,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} body\r\n * @returns {Object} data\r\n */\r\n\r\nexport const resetPassword = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.user.resetPassword, {\r\n    body,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} body\r\n * @returns {Object} data\r\n */\r\nexport const login = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.user.login, {\r\n    body,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} body\r\n * @returns {Object} data\r\n */\r\nexport const registerUser = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.user.create, {\r\n    body,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} body\r\n * @returns {Object} data\r\n */\r\nexport const verifyEmail = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.user.verifyEmail, {\r\n    body,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const deleteUser = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.user.deleteUser, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.remove(url, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @param {Object} body\r\n * @returns {Object} data\r\n */\r\nexport const updateUser = async (id, body) => {\r\n  const url = interpolate(config.apiEndPoint.user.updateUser, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.put(url, {\r\n    body,\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n * Create PDF UI\r\n * @param {Object} userInfo\r\n * @param {Array} users\r\n * @returns {Object}\r\n */\r\nexport const createPdfData = (userInfo, users) => {\r\n  return {\r\n    content: [\r\n      //Header\r\n      {\r\n        ...mainHeader(userInfo),\r\n      },\r\n\r\n      {\r\n        style: 'header',\r\n        table: {\r\n          widths: '*',\r\n          body: [\r\n            [\r\n              {\r\n                border: ['#5bc0de', false, false, false],\r\n                text: 'Users List',\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n\r\n      users.length > 0\r\n        ? {\r\n            layout: {\r\n              hLineWidth: function () {\r\n                return 0;\r\n              },\r\n              vLineWidth: function () {\r\n                return 0;\r\n              },\r\n              paddingBottom: function () {\r\n                return 5;\r\n              },\r\n            },\r\n            table: {\r\n              ...bodyForUsers(users),\r\n            },\r\n\r\n            fontSize: 8,\r\n            alignment: 'center',\r\n          }\r\n        : null,\r\n    ],\r\n    styles: {\r\n      ...tableStyles(),\r\n    },\r\n  };\r\n};\r\n","import * as userServices from '../services/user';\r\nimport { handleError } from '../utils/error';\r\nimport * as userConstants from '../constants/userConstants';\r\nimport * as tokenService from '../services/token';\r\n\r\nexport const auth = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_AUTH_START });\r\n\r\n    const body = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    const { authData, token } = await userServices.login(body);\r\n\r\n    const userInfo = {\r\n      ...authData,\r\n      token,\r\n    };\r\n\r\n    tokenService.setToken(userInfo);\r\n    dispatch({\r\n      type: userConstants.USER_AUTH_SUCCESS,\r\n      payload: userInfo,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USER_AUTH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const Logout = () => (dispatch) => {\r\n  tokenService.removeToken();\r\n  dispatch({ type: userConstants.RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_REGISTER_START });\r\n\r\n    const body = {\r\n      name,\r\n      email,\r\n      password,\r\n    };\r\n    const { message } = await userServices.registerUser(body);\r\n\r\n    dispatch({\r\n      type: userConstants.USER_REGISTER_SUCCESS,\r\n      payload: message,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USER_REGISTER_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const emailVerification = (verificationCode) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_AUTH_START });\r\n\r\n    const code = {\r\n      verificationCode,\r\n    };\r\n\r\n    const { authData, token } = await userServices.verifyEmail(code);\r\n\r\n    const userInfo = {\r\n      ...authData,\r\n      token,\r\n    };\r\n   \r\n    tokenService.setToken(userInfo);\r\n    \r\n    dispatch({\r\n      type: userConstants.USER_AUTH_SUCCESS,\r\n      payload: userInfo,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USER_AUTH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const userList = (initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: userConstants.USERLIST_FETCH_START });\r\n    }\r\n\r\n    const { results, count } = await userServices.fetchUsers();\r\n\r\n    dispatch({\r\n      type: userConstants.USERLIST_FETCH_SUCCESS,\r\n      payload: {\r\n        results,\r\n        count,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USERLIST_FETCH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const userDelete = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_DELETE_START });\r\n\r\n    await userServices.deleteUser(id);\r\n\r\n    dispatch({\r\n      type: userConstants.USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USER_DELETE_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (id, updatedData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_EDIT_START });\r\n\r\n    await userServices.updateUser(id, updatedData);\r\n\r\n    dispatch({\r\n      type: userConstants.USER_EDIT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USER_EDIT_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_FETCH_START });\r\n\r\n    const data = await userServices.fetchUser(id);\r\n\r\n    dispatch({\r\n      type: userConstants.USER_FETCH_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.USER_FETCH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.FORGOT_PASSWORD_SEND_START });\r\n\r\n    const { message } = await userServices.forgotPassword(email);\r\n\r\n    dispatch({\r\n      type: userConstants.FORGOT_PASSWORD_SEND_SUCCESS,\r\n      payload: message,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.FORGOT_PASSWORD_SEND_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (resetPasswordData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.RESET_PASSWORD_START });\r\n\r\n    const { message } = await userServices.resetPassword(resetPasswordData);\r\n\r\n    dispatch({\r\n      type: userConstants.RESET_PASSWORD_SUCCESS,\r\n      payload: message,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: userConstants.RESET_PASSWORD_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\r\nimport * as routes from '../constants/routes';\r\nimport * as userAction from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Login = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo, error, loading } = userAuthData;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : routes.HOME;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [dispatch, userInfo, redirect, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userAction.auth(email, password));\r\n  };\r\n\r\n  const redirectUserToRegisterRoute = redirect ? routes.REGISTER + `?redirect=${redirect}` : routes.REGISTER;\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.RESET} />}\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            margin=\"normal\"\r\n            placeholder=\"ex:- JohnDoe@gmail.com\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            type=\"password\"\r\n            placeholder=\"***********\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            value={password}\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth disabled={loading}>\r\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Sign In</>}\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer?\r\n            <Link to={redirectUserToRegisterRoute}>Register</Link>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Link to={routes.FORGOT_PASSWORD}>Forgot Password</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { addToCart, removeItemFromCart } from '../actions/cartAction';\r\nimport { Select, Button, FormControl, makeStyles, MenuItem } from '@material-ui/core/';\r\nimport { interpolate } from '../utils/string';\r\nimport * as routes from '../constants/routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Cart = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeItemFromCart(id));\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    history.push({\r\n      pathname: routes.LOGIN,\r\n      search: `?redirect=${routes.SHIPPING}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {!cartItems.length ? (\r\n          <>\r\n            Your cart is empty <Link to={routes.HOME}>Go Back</Link>\r\n          </>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.productId}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.productImage} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link\r\n                      to={interpolate(routes.PRODUCT, {\r\n                        productId: item.productId,\r\n                      })}\r\n                    >\r\n                      {item.productName}\r\n                    </Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        label=\"Qty\"\r\n                        value={item.qty}\r\n                        onChange={(e) => dispatch(addToCart(item.productId, Number(e.target.value)))}\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                          <MenuItem key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.productId)}>\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>$\r\n              {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleCheckout}\r\n                fullWidth\r\n                disabled={!cartItems.length}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  return <Route {...rest} render={(props) => (!userInfo ? <Redirect to=\"/login\" /> : <Component {...props} />)} />;\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !userInfo ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : userInfo.role !== 'admin' ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport * as routes from '../../constants/routes';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to={routes.SHIPPING}>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to={routes.PAYMENT}>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to={routes.PLACE_ORDER}>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutStep/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartAction';\r\nimport * as routes from '../constants/routes';\r\nimport { TextField, Button } from '@material-ui/core/';\r\n\r\nconst Shipping = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress, cartItems } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  if (!cartItems.length) {\r\n    history.push({\r\n      pathname: routes.HOME,\r\n    });\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push({\r\n      pathname: routes.PAYMENT,\r\n    });\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"address\"\r\n          label=\"Enter Address\"\r\n          name=\"address\"\r\n          autoComplete=\"address\"\r\n          autoFocus\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"city\"\r\n          label=\"Enter City\"\r\n          name=\"city\"\r\n          autoComplete=\"city\"\r\n          autoFocus\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"postal code\"\r\n          label=\"Enter postal code\"\r\n          name=\"postal code\"\r\n          autoComplete=\"postal code\"\r\n          autoFocus\r\n          value={postalCode}\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"country\"\r\n          label=\"Enter country\"\r\n          name=\"country\"\r\n          autoComplete=\"country\"\r\n          autoFocus\r\n          value={country}\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","import React, { useState } from 'react';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutStep/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartAction';\r\nimport * as routes from '../constants/routes';\r\nimport { Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core/';\r\n\r\nconst PaymentMethod = ({ history }) => {\r\n  if (!localStorage.getItem('shippingAddress')) {\r\n    history.push({\r\n      pathname: routes.SHIPPING,\r\n    });\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (paymentMethod === '') {\r\n      return;\r\n    }\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push({\r\n      pathname: routes.PLACE_ORDER,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Select Method</FormLabel>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <RadioGroup\r\n                aria-label=\"paymemtMethod\"\r\n                name=\"paymemtMethod\"\r\n                value={paymentMethod}\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              >\r\n                <FormControlLabel value=\"PayPal\" control={<Radio color=\"primary\" />} label=\"PayPal or Credit Card\" />\r\n              </RadioGroup>\r\n            </Col>\r\n            {/* <Col md=\"4\">\r\n              <RadioGroup\r\n                aria-label=\"paymemtMethod\"\r\n                name=\"paymemtMethod\"\r\n                value={paymentMethod}\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              >\r\n                <FormControlLabel value=\"esewa\" control={<Radio color=\"primary\" />} label=\"Esewa\" />\r\n              </RadioGroup>\r\n            </Col> */}\r\n          </Row>\r\n        </FormControl>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentMethod;\r\n","import { mainHeader, bodyForOrders, tableStyles } from '../components/table/tableLayout';\r\nimport config from '../config';\r\nimport http from '../utils/http';\r\nimport { interpolate } from '../utils/string';\r\n\r\n/**\r\n *\r\n * @param {Object} body\r\n * @returns {Object} data\r\n */\r\nexport const createOrder = async (body) => {\r\n  const { data } = await http.post(config.apiEndPoint.order.createOrder, {\r\n    body,\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const order = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.order.order, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.get(url, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @param {Object} body\r\n * @returns {Object} data\r\n */\r\nexport const pay = async (id, body) => {\r\n  const url = interpolate(config.apiEndPoint.order.pay, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.post(url, {\r\n    body,\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Integer} id\r\n * @returns {Object} data\r\n */\r\nexport const deliverOrder = async (id) => {\r\n  const url = interpolate(config.apiEndPoint.order.deliverOrder, {\r\n    id: id,\r\n  });\r\n  const { data } = await http.post(url, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @returns {Array} data\r\n */\r\nexport const userOrder = async () => {\r\n  const { data } = await http.get(config.apiEndPoint.order.userOrder, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n *\r\n * @returns {Array}\r\n */\r\nexport const orders = async () => {\r\n  const { data } = await http.get(config.apiEndPoint.order.orders, {\r\n    accessToken: true,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n * Create PDF UI\r\n * @param {Object} userInfo\r\n * @param {Array} orders\r\n * @returns {Object}\r\n */\r\nexport const createPdfData = (userInfo, orders) => {\r\n  return {\r\n    content: [\r\n      //Header\r\n      {\r\n        ...mainHeader(userInfo),\r\n      },\r\n\r\n      {\r\n        style: 'header',\r\n        table: {\r\n          widths: '*',\r\n          body: [\r\n            [\r\n              {\r\n                border: ['#5bc0de', false, false, false],\r\n                text: 'Orders List',\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n\r\n      orders.length > 0\r\n        ? {\r\n            layout: {\r\n              hLineWidth: function () {\r\n                return 0;\r\n              },\r\n              vLineWidth: function () {\r\n                return 0;\r\n              },\r\n              paddingBottom: function () {\r\n                return 5;\r\n              },\r\n            },\r\n            table: {\r\n              ...bodyForOrders(orders),\r\n            },\r\n\r\n            fontSize: 9,\r\n            alignment: 'center',\r\n          }\r\n        : null,\r\n    ],\r\n    styles: {\r\n      ...tableStyles(),\r\n    },\r\n  };\r\n};\r\n","import * as orderServices from '../services/order';\r\nimport { handleError } from '../utils/error';\r\nimport * as orderConstants from '../constants/orderConstants';\r\nimport * as cartConstants from '../constants/cartConstants';\r\n\r\nexport const createOrder = (orderData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: orderConstants.CREATE_ORDER_START });\r\n\r\n    const { data } = await orderServices.createOrder(orderData);\r\n\r\n    dispatch({\r\n      type: orderConstants.CREATE_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    localStorage.removeItem('paymentMethod');\r\n    dispatch({\r\n      type: cartConstants.CART_RESET,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: orderConstants.CREATE_ORDER_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrder = (orderId, initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: orderConstants.GET_ORDER_START });\r\n    }\r\n\r\n    const { data } = await orderServices.order(orderId);\r\n\r\n    dispatch({\r\n      type: orderConstants.GET_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: orderConstants.GET_ORDER_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.ORDER_PAY_START,\r\n    });\r\n\r\n    const { message } = await orderServices.pay(orderId, paymentResult);\r\n\r\n    dispatch({\r\n      type: orderConstants.ORDER_PAY_SUCCESS,\r\n      payload: message,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: orderConstants.ORDER_PAY_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.ORDER_DILIVERD_START,\r\n    });\r\n\r\n    const { data } = await orderServices.deliverOrder(orderId);\r\n\r\n    dispatch({\r\n      type: orderConstants.ORDER_DILIVERD_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: orderConstants.ORDER_DILIVERD_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const authOrder = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.AUTH_ORDER_FETCH_START,\r\n    });\r\n\r\n    const { data, count } = await orderServices.userOrder();\r\n\r\n    dispatch({\r\n      type: orderConstants.AUTH_ORDER_FETCH_SUCCESS,\r\n      payload: data,\r\n      total: count,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: orderConstants.AUTH_ORDER_FETCH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.ORDERLIST_FETCH_START,\r\n    });\r\n\r\n    const { results, count } = await orderServices.orders();\r\n\r\n    dispatch({\r\n      type: orderConstants.ORDERLIST_FETCH_SUCCESS,\r\n      payload: {\r\n        results,\r\n        count,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: orderConstants.ORDERLIST_FETCH_FAIL,\r\n      payload: handleError(err),\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst TableLoader = () => {\r\n  return (\r\n    <Table striped bordered hover responsive className=\"table-sm\">\r\n      <thead>\r\n        <tr>\r\n          {Array(7)\r\n            .fill()\r\n            .map((data, index) => (\r\n              <th key={index}>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton height={25} />\r\n                </SkeletonTheme>\r\n              </th>\r\n            ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {Array(7)\r\n          .fill()\r\n          .map((data, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\nexport default TableLoader;\r\n","import React from 'react';\r\nimport { Select, InputLabel, FormControl, makeStyles, MenuItem } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Print = ({ printAs }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-outlined-label\">Print</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        onChange={(e) => printAs(e.target.value)}\r\n        label=\"Print As\"\r\n        autoWidth\r\n      >\r\n        <MenuItem value=\"pdf\"> PDF</MenuItem>\r\n        <MenuItem value=\"excel\">EXCEL</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Print;\r\n","import React, { useEffect } from 'react';\r\nimport { Table, Button, Row, Col, ListGroup, Card } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\n//import { Button as MeterialButton } from \"@material-ui/core/\";\r\nimport { authOrder } from '../actions/orderAction';\r\nimport { interpolate } from '../utils/string';\r\nimport { createPdfData } from '../services/order';\r\nimport * as routes from '../constants/routes';\r\nimport TableLoader from '../components/Loader/TableLoader';\r\nimport Print from '../components/Print/Print';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const authOrders = useSelector((state) => state.authOrders);\r\n  const { orders, loading, error, count } = authOrders;\r\n\r\n  useEffect(() => {\r\n    dispatch(authOrder());\r\n    // eslint-disable-next-line\r\n  }, [dispatch, userInfo]);\r\n\r\n  const printAs = (value) => {\r\n    const downloadAs = value;\r\n\r\n    switch (downloadAs) {\r\n      case 'pdf':\r\n        var docDefinition = createPdfData(userInfo, orders);\r\n\r\n        pdfMake.createPdf(docDefinition).download('user-order.pdf');\r\n\r\n        break;\r\n      case 'excel':\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  console.log(orders);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Profile</h2>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Name:</Col>\r\n                <Col>\r\n                  <strong>{userInfo.name}</strong>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Email:</Col>\r\n                <Col>\r\n                  <strong>{userInfo.email}</strong>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Account:</Col>\r\n                <Col>\r\n                  <strong>{userInfo.verify ? 'Verified' : 'Not Verified'}</strong>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            {/* <ListGroup.Item>\r\n              <LinkContainer to=\"/updateUserDetails\">\r\n                <MeterialButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  disabled={true}\r\n                >\r\n                  Update\r\n                </MeterialButton>\r\n              </LinkContainer>\r\n            </ListGroup.Item> */}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n      <Col md={9}>\r\n        <div className=\"clearfix\">\r\n          <span className=\"float-left\">\r\n            <h1>My Orders ({count})</h1>\r\n          </span>\r\n\r\n          <span className=\"float-right\">\r\n            {' '}\r\n            <Print printAs={printAs} />\r\n          </span>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <TableLoader />\r\n        ) : error ? (\r\n          <ErrorMessage header=\"Something went wrong\" message={error} />\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL PRICE</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer\r\n                      to={interpolate(routes.ORDER, {\r\n                        orderId: order._id,\r\n                      })}\r\n                    >\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport CheckoutSteps from '../components/CheckoutStep/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderAction';\r\nimport * as routes from '../constants/routes';\r\nimport { interpolate } from '../utils/string';\r\nimport * as orderConstants from '../constants/orderConstants';\r\nimport { Button, CircularProgress, makeStyles } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst PlaceOrder = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const redirectUser = !localStorage.getItem('shippingAddress')\r\n    ? routes.SHIPPING\r\n    : !localStorage.getItem('paymentMethod')\r\n    ? routes.PAYMENT\r\n    : null;\r\n\r\n  if (redirectUser) {\r\n    history.push(redirectUser);\r\n  }\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.createOrder);\r\n  const { order, success, error, loading } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push({\r\n        pathname: interpolate(routes.ORDER, { orderId: order._id }),\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shipping: cart.shippingAddress,\r\n        payment: {\r\n          paymentMethod: cart.paymentMethod,\r\n        },\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorMessage header=\"Create Order Error\" message={error} reset={orderConstants.CREATE_ORDER_RESET} />}\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {!cart.cartItems.length ? (\r\n                <>Your cart is empty</>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.productImage} alt={item.productName} fluid rounded />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link\r\n                            to={interpolate(routes.PRODUCT, {\r\n                              productId: item.productId,\r\n                            })}\r\n                          >\r\n                            {item.productName}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  disabled={!cart.cartItems || loading}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Place Order</>}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrder;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport { listOrders } from '../actions/orderAction';\r\nimport TableLoader from '../components/Loader/TableLoader';\r\nimport Print from '../components/Print/Print';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport * as routes from '../constants/routes';\r\nimport { createPdfData } from '../services/order';\r\nimport { interpolate } from '../utils/string';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst OrderList = () => {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  const { orders, loading, error, count, success } = orderList;\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listOrders());\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const printAs = (value) => {\r\n    const downloadAs = value;\r\n\r\n    switch (downloadAs) {\r\n      case 'pdf':\r\n        var docDefinition = createPdfData(userInfo, orders);\r\n\r\n        pdfMake.createPdf(docDefinition).download('orders-list.pdf');\r\n\r\n        break;\r\n      case 'excel':\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"clearfix\">\r\n        <span className=\"float-left\">\r\n          <h1>Orders ({count})</h1>\r\n        </span>\r\n\r\n        <span className=\"float-right\">\r\n          {' '}\r\n          <Print printAs={printAs} />\r\n        </span>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <TableLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.userId && order.userId.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer\r\n                    to={interpolate(routes.ORDER, {\r\n                      orderId: order._id,\r\n                    })}\r\n                  >\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useState } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport 'animate.css';\r\n\r\nconst SuccessMessage = ({ header, message, reset }) => {\r\n  const [show, setShow] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'fixed', right: '0', zIndex: '20180210' }}>\r\n        <Toast\r\n          onClose={() => {\r\n            setShow(false);\r\n            dispatch({ type: reset });\r\n          }}\r\n          show={show}\r\n          delay={3000}\r\n          autohide\r\n          className=\"animate__animated animate__shakeX\"\r\n        >\r\n          <Toast.Header\r\n            style={{\r\n              background: '#43BE31',\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            <strong className=\"mr-auto\">{header}</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>{message}</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuccessMessage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Modal, Form, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport SuccessMessage from '../components/Message/successMessage';\r\nimport TableLoader from '../components/Loader/TableLoader';\r\nimport {\r\n  Button as MaterialButton,\r\n  TextField,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from '@material-ui/core/';\r\nimport { productListForAdmin, deleteProduct, createProduct } from '../actions/productAction';\r\nimport * as routes from '../constants/routes';\r\nimport { interpolate } from '../utils/string';\r\nimport * as productConstants from '../constants/productConstants';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 330,\r\n    top: 6,\r\n    left: -4,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, count, error, success } = productList;\r\n\r\n  const deleteProductData = useSelector((state) => state.deleteProduct);\r\n  const { success: deleteSuccess, error: deleteFail } = deleteProductData;\r\n\r\n  const createProductDetails = useSelector((state) => state.createProductDetails);\r\n  const { success: createSuccess, error: createFail, loading: createLoading } = createProductDetails;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n  const [productImage, setProductImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (createSuccess) {\r\n      setOpenForm(false);\r\n      setName('');\r\n      setProductImage('');\r\n      setBrand('');\r\n      setPrice('');\r\n      setCategory('');\r\n      setCountInStock('');\r\n      setDescription('');\r\n\r\n      dispatch({ type: productConstants.CREATE_PRODUCT_RESET });\r\n    }\r\n\r\n    dispatch(productListForAdmin(initialLoading));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, deleteSuccess, createSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const cancelCreateProduct = () => {\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      name === '' ||\r\n      category === '' ||\r\n      productImage === '' ||\r\n      description === '' ||\r\n      brand === '' ||\r\n      price === '' ||\r\n      countInStock === ''\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', name);\r\n    formData.append('productImage', productImage);\r\n    formData.append('brand', brand);\r\n    formData.append('price', price);\r\n    formData.append('category', category);\r\n    formData.append('countInStock', countInStock);\r\n    formData.append('description', description);\r\n    dispatch(createProduct(formData));\r\n  };\r\n\r\n  const openNewProductForm = () => {\r\n    if (openForm) {\r\n      return (\r\n        <>\r\n          <Modal show={openForm} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">Add Product</Modal.Title>\r\n            </Modal.Header>\r\n            {createFail && (\r\n              <ErrorMessage\r\n                header=\"Something went wrong\"\r\n                message={createFail}\r\n                reset={productConstants.CREATE_PRODUCT_RESET}\r\n              />\r\n            )}\r\n            <Form onSubmit={submitHandler}>\r\n              <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"name\"\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"brand\"\r\n                        label=\"Brand\"\r\n                        name=\"brand\"\r\n                        autoComplete=\"brand\"\r\n                        autoFocus\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"price\"\r\n                        label=\"Price\"\r\n                        name=\"price\"\r\n                        autoComplete=\"price\"\r\n                        autoFocus\r\n                        value={price}\r\n                        onChange={(e) => setPrice(Number(e.target.value))}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"countInStock\"\r\n                        label=\"CountInStock\"\r\n                        name=\"countInStock\"\r\n                        autoComplete=\"countInStock\"\r\n                        autoFocus\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(Number(e.target.value))}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"file\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        autoComplete=\"file\"\r\n                        autoFocus\r\n                        onChange={(e) => setProductImage(e.target.files[0])}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-outlined-label\"\r\n                          id=\"demo-simple-select-outlined\"\r\n                          onChange={(e) => setCategory(e.target.value)}\r\n                          label=\"Category\"\r\n                          value={category}\r\n                        >\r\n                          <MenuItem value=\"Eyeglasses\">Eyeglasses</MenuItem>\r\n                          <MenuItem value=\"Sunglasses\">Sunglasses</MenuItem>\r\n                          <MenuItem value=\"Computer Glasses\">Computer Glasses</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={12} md={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        name=\"description\"\r\n                        autoComplete=\"description\"\r\n                        autoFocus\r\n                        value={description}\r\n                        multiline\r\n                        rows={5}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <MaterialButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\"mr-2\"\r\n                  disabled={createLoading}\r\n                >\r\n                  {createLoading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Submit</>}\r\n                </MaterialButton>{' '}\r\n                <MaterialButton variant=\"contained\" color=\"primary\" onClick={cancelCreateProduct}>\r\n                  Close\r\n                </MaterialButton>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (id, e) => {\r\n    e.preventDefault();\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"custom-ui\">\r\n            <h1 className=\"font-weight-bold text-white\">Are you sure?</h1>\r\n            <p>You want to delete this product?</p>\r\n            <MaterialButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(deleteProduct(id));\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it !\r\n            </MaterialButton>\r\n            <MaterialButton variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              No\r\n            </MaterialButton>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {deleteSuccess && (\r\n        <SuccessMessage\r\n          header=\"Done\"\r\n          message=\"Product Deleted Successfully\"\r\n          reset={productConstants.DELETE_PRODUCT_RESET}\r\n        />\r\n      )}\r\n      {deleteFail && (\r\n        <ErrorMessage\r\n          header=\"Something went wrong\"\r\n          message={deleteFail}\r\n          reset={productConstants.DELETE_PRODUCT_RESET}\r\n        />\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <h1>Products({count})</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <MaterialButton variant=\"contained\" color=\"primary\" onClick={() => setOpenForm(true)}>\r\n            <i className=\"fas fa-plus mr-2\"></i> Add Product\r\n          </MaterialButton>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <TableLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer\r\n                      to={interpolate(routes.PRODUCT_EDIT, {\r\n                        productId: product._id,\r\n                      })}\r\n                    >\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button variant=\"danger\" className=\"btn-sm\" onClick={(e) => deleteHandler(product._id, e)}>\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n      {openNewProductForm()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport SuccessMessage from '../components/Message/successMessage';\r\nimport { userList, userDelete } from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\nimport { Button as MaterialButton } from '@material-ui/core/';\r\nimport TableLoader from '../components/Loader/TableLoader';\r\nimport { createPdfData } from '../services/user';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport Print from '../components/Print/Print';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n  const userListDetails = useSelector((state) => state.userList);\r\n  const { loading, users, count, error, success } = userListDetails;\r\n\r\n  const userDeleteDetails = useSelector((state) => state.userDeleteDetails);\r\n  const { success: deleteSuccess, error: deleteFail } = userDeleteDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(userList(initialLoading));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, deleteSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const deleteHandler = (id, e) => {\r\n    e.preventDefault();\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"custom-ui\">\r\n            <h1 className=\"font-weight-bold text-white\">Are you sure?</h1>\r\n            <p>You want to delete this user?</p>\r\n            <MaterialButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(userDelete(id));\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it !\r\n            </MaterialButton>\r\n            <MaterialButton variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              No\r\n            </MaterialButton>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  const printAs = (value) => {\r\n    const downloadAs = value;\r\n\r\n    switch (downloadAs) {\r\n      case 'pdf':\r\n        var docDefinition = createPdfData(userInfo, users);\r\n\r\n        pdfMake.createPdf(docDefinition).download('users-list.pdf');\r\n\r\n        break;\r\n      case 'excel':\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {deleteSuccess && (\r\n        <SuccessMessage header=\"Done\" message=\"User Deleted Successfully\" reset={userConstants.USER_DELETE_RESET} />\r\n      )}\r\n      {deleteFail && (\r\n        <ErrorMessage header=\"Something went wrong\" message={deleteFail} reset={userConstants.USER_DELETE_RESET} />\r\n      )}\r\n      <div className=\"clearfix\">\r\n        <span className=\"float-left\">\r\n          <h1>Users ({count})</h1>\r\n        </span>\r\n\r\n        <span className=\"float-right\">\r\n          {' '}\r\n          <Print printAs={printAs} />\r\n        </span>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <TableLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>EMAIL</th>\r\n                <th>VERIFIED</th>\r\n                <th>ROLE</th>\r\n                <th>DATE</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.verify ? (\r\n                      <i className=\"fas fa-check\" style={{ color: '#43BE31' }}></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>{user.role}</td>\r\n                  <td>{user.createdAt.substring(0, 10)}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button variant=\"danger\" className=\"btn-sm\" onClick={(e) => deleteHandler(user._id, e)}>\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport * as userAction from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from '@material-ui/core/';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport confirmationImg from '../assests/confirmation.png';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport * as routes from '../constants/routes';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst UpdateUser = ({ match }) => {\r\n  const userId = match.params.userId;\r\n  const userUpdateDetails = useSelector((state) => state.userUpdateDetails);\r\n  const { loading: updateLoading, error: updateError, success: updateSuccess } = userUpdateDetails;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error, success } = userDetails;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [Success, setSuccess] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.getUser(userId));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, userId]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setRole(user.role);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const UpdateData = {\r\n      name,\r\n      email,\r\n      role,\r\n    };\r\n    dispatch(userAction.updateUser(userId, UpdateData));\r\n  };\r\n\r\n  const ConfirmedAlert = () => {\r\n    if (updateSuccess) {\r\n      return confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className=\"custom-ui-alert\">\r\n              <div className=\"success-img\">\r\n                <img src={confirmationImg} alt=\"confirmationImg\" />\r\n              </div>\r\n              <h3 className=\"font-weight-bold text\">User updated successfully</h3>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  dispatch({ type: userConstants.USER_EDIT_RESET });\r\n                  setSuccess(true);\r\n                }}\r\n              >\r\n                OK\r\n              </Button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Success && <Redirect to={routes.USERS} />}\r\n      {updateError && (\r\n        <ErrorMessage header=\"Something went wrong\" message={updateError} reset={userConstants.USER_EDIT_RESET} />\r\n      )}\r\n      <Link to={routes.USERS} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <h4>Loading...</h4>\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <FormContainer>\r\n            <h1>Edit User</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"brand\"\r\n                autoFocus\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Role</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                  label=\"Role\"\r\n                  value={role}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"user\">User</MenuItem>\r\n                  <MenuItem value=\"admin\">Admin</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                disabled={updateLoading}\r\n                className={classes.prgressColor}\r\n              >\r\n                {updateLoading ? <CircularProgress color=\"inherit\" /> : <>Update</>}\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n          {ConfirmedAlert()}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport * as productAction from '../actions/productAction';\r\nimport * as productConstants from '../constants/productConstants';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from '@material-ui/core/';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport confirmationImg from '../assests/confirmation.png';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport * as routes from '../constants/routes';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst EditProduct = ({ match }) => {\r\n  const productId = match.params.productId;\r\n  const productData = useSelector((state) => state.Product);\r\n  const { loading, product, error, success } = productData;\r\n\r\n  const updateProductDetails = useSelector((state) => state.updateProductDetails);\r\n  const { loading: EditProductLoading, error: EditProductError, success: EditProductSuccess } = updateProductDetails;\r\n\r\n  const [name, setName] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [Success, setSuccess] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productAction.product(productId));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, productId]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setBrand(product.brand);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setDescription(product.description);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const UpdateData = {\r\n      name,\r\n      brand,\r\n      price,\r\n      category,\r\n      countInStock,\r\n      description,\r\n    };\r\n    dispatch(productAction.EditProduct(productId, UpdateData));\r\n  };\r\n\r\n  const ConfirmedAlert = () => {\r\n    if (EditProductSuccess) {\r\n      return confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className=\"custom-ui-alert\">\r\n              <div className=\"success-img\">\r\n                <img src={confirmationImg} alt=\"confirmationImg\" />\r\n              </div>\r\n              <h3 className=\"font-weight-bold text\">Product updated successfully</h3>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  dispatch({ type: productConstants.EDIT_PRODUCT_RESET });\r\n                  setSuccess(true);\r\n                }}\r\n              >\r\n                OK\r\n              </Button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {Success && <Redirect to={routes.PRODUCTS} />}\r\n      {EditProductError && (\r\n        <ErrorMessage\r\n          header=\"Something went wrong\"\r\n          message={EditProductError}\r\n          reset={productConstants.EDIT_PRODUCT_RESET}\r\n        />\r\n      )}\r\n      <Link to={routes.PRODUCTS} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <h4>Loading...</h4>\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"brand\"\r\n                label=\"Brand\"\r\n                name=\"brand\"\r\n                autoComplete=\"brand\"\r\n                autoFocus\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"price\"\r\n                label=\"Price\"\r\n                name=\"price\"\r\n                autoComplete=\"price\"\r\n                autoFocus\r\n                value={price}\r\n                onChange={(e) => setPrice(Number(e.target.value))}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"countInStock\"\r\n                label=\"CountInStock\"\r\n                name=\"countInStock\"\r\n                autoComplete=\"countInStock\"\r\n                autoFocus\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(Number(e.target.value))}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                autoComplete=\"description\"\r\n                autoFocus\r\n                value={description}\r\n                multiline\r\n                rows={5}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                  label=\"Category\"\r\n                  value={category}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Eyeglasses\">Eyeglasses</MenuItem>\r\n                  <MenuItem value=\"Sunglasses\">Sunglasses</MenuItem>\r\n                  <MenuItem value=\"Computer Glasses\">Computer Glasses</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth disabled={EditProductLoading}>\r\n                {EditProductLoading ? (\r\n                  <CircularProgress color=\"inherit\" className={classes.prgressColor} />\r\n                ) : (\r\n                  <>Update</>\r\n                )}\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n          {ConfirmedAlert()}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst Order = () => {\r\n  return (\r\n    <>\r\n      <h1>\r\n        {' '}\r\n        <SkeletonTheme color=\"lightGray\">\r\n          <Skeleton />\r\n        </SkeletonTheme>\r\n      </h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </h2>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <SkeletonTheme color=\"lightGray\">\r\n                <Skeleton height={30} />\r\n              </SkeletonTheme>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </h2>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <SkeletonTheme color=\"lightGray\">\r\n                <Skeleton height={30} />\r\n              </SkeletonTheme>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>\r\n                {' '}\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </h2>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={1}>\r\n                      <SkeletonTheme color=\"lightGray\">\r\n                        <Skeleton />\r\n                      </SkeletonTheme>\r\n                    </Col>\r\n                    <Col>\r\n                      <SkeletonTheme color=\"lightGray\">\r\n                        <Skeleton />\r\n                      </SkeletonTheme>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <SkeletonTheme color=\"lightGray\">\r\n                        <Skeleton />\r\n                      </SkeletonTheme>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>\r\n                  <SkeletonTheme color=\"lightGray\">\r\n                    <Skeleton />\r\n                  </SkeletonTheme>\r\n                </h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton height={30} />\r\n                </SkeletonTheme>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton height={30} />\r\n                </SkeletonTheme>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from '@material-ui/core/';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport Message from '../components/InfoMessage/Message';\r\nimport Loader from '../components/Loader/Loader';\r\nimport { getOrder, payOrder, deliverOrder } from '../actions/orderAction';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\nimport { interpolate } from '../utils/string';\r\nimport config from '../config';\r\nimport * as routes from '../constants/routes';\r\nimport OrderLoader from '../components/Loader/OrderLoader';\r\n\r\nconst Order = ({ match }) => {\r\n  const orderId = match.params.orderId;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error, success } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPayMessage } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n\r\n  const refId = queryParams.get('refId') ? queryParams.get('refId').trim() : null;\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (order && !order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, orderId, successPayMessage, successDeliver, order]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_PAY_RESET });\r\n    dispatch({ type: ORDER_DELIVER_RESET });\r\n    dispatch(getOrder(orderId, initialLoading));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, successPayMessage, successDeliver, refId]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  useEffect(() => {\r\n    if (refId) {\r\n      dispatch(payOrder(orderId));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [refId]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order._id));\r\n  };\r\n\r\n  const payWithEsewa = () => {\r\n    var resultId = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < 14; i++) {\r\n      resultId += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n\r\n    var path = config.esewaPaymentUrl;\r\n    var params = {\r\n      amt: order.itemsPrice,\r\n      psc: order.shippingPrice,\r\n      pdc: 0,\r\n      txAmt: order.taxPrice,\r\n      tAmt: order.totalPrice,\r\n      pid: resultId,\r\n      scd: 'EPAYTEST',\r\n      su: `http://localhost:3000/order/${orderId}`,\r\n      fu: `http://localhost:3000/order/${orderId}`,\r\n    };\r\n    var form = document.createElement('form');\r\n    form.setAttribute('method', 'POST');\r\n    form.setAttribute('action', path);\r\n\r\n    Object.keys(params).forEach((key) => {\r\n      var hiddenField = document.createElement('input');\r\n      hiddenField.setAttribute('type', 'hidden');\r\n      hiddenField.setAttribute('name', key);\r\n      hiddenField.setAttribute('value', params[key]);\r\n      form.appendChild(hiddenField);\r\n    });\r\n\r\n    document.body.appendChild(form);\r\n    form.submit();\r\n  };\r\n\r\n  return loading ? (\r\n    <OrderLoader />\r\n  ) : error ? (\r\n    <ErrorMessage header=\"Something went wrong\" message={error} />\r\n  ) : (\r\n    <>\r\n      {order ? (\r\n        <>\r\n          <h1>Order {order._id}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong> {order.userId.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email: </strong> <a href={`mailto:${order.userId.email}`}>{order.userId.email}</a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address:</strong> {order.shipping.address},{order.shipping.city} {order.shipping.postalCode}\r\n                    , {order.shipping.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.payment ? order.payment.paymentMethod : ''}\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                {order.orderItems ? (\r\n                  <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {!order.orderItems.length ? (\r\n                      <Message>Order is empty</Message>\r\n                    ) : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {order.orderItems.map((item, index) => (\r\n                          <ListGroup.Item key={index}>\r\n                            <Row>\r\n                              <Col md={1}>\r\n                                <Image src={item.productImage} alt={item.productName} fluid rounded />\r\n                              </Col>\r\n                              <Col>\r\n                                <Link\r\n                                  to={interpolate(routes.PRODUCT, {\r\n                                    productId: item.productId,\r\n                                  })}\r\n                                >\r\n                                  {item.productName}\r\n                                </Link>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {/* {order.payment && order.payment.paymentMethod === 'PayPal' && !order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      {loadingPay && <Loader />}\r\n                      {!sdkReady ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  )} */}\r\n                  {/* {order.payment && order.payment.paymentMethod === 'esewa' && !order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={payWithEsewa}>\r\n                        <Image src={config.esewaImageUrl} alt=\"esewa\" fluid rounded />\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )} */}\r\n\r\n                  {loadingDeliver && <Loader />}\r\n                  {userInfo && userInfo.role === 'admin' && order.isPaid && !order.isDelivered && (\r\n                    <ListGroup.Item>\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={deliverHandler}>\r\n                        Mark As Delivered\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as routes from '../constants/routes';\r\nimport * as userAction from '../actions/userAction';\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.Logout());\r\n  }, [dispatch]);\r\n\r\n  return <Redirect to={routes.HOME} />;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport SuccessMessage from '../components/Message/successMessage';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\r\nimport * as routes from '../constants/routes';\r\nimport * as userAction from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Register = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [verificationMessage, setVerificationMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const userRegisterData = useSelector((state) => state.userRegister);\r\n\r\n  const { error, loading, message, success } = userRegisterData;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : routes.HOME;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setTimeout(() => {\r\n        history.push({\r\n          // pathname: routes.EMAIL_VERIFICATION,\r\n          pathname: routes.HOME,\r\n          search: `?redirect=${redirect}`,\r\n        });\r\n      }, 5000);\r\n    }\r\n  }, [success, history, redirect]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setVerificationMessage('');\r\n    if (password !== confirmPassword) {\r\n      return setVerificationMessage(\"Passwords don't match\");\r\n    }\r\n    dispatch(userAction.register(name, email, password));\r\n  };\r\n\r\n  const redirectUserToLoginRoute = redirect ? routes.LOGIN + `?redirect=${redirect}` : routes.LOGIN;\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.USER_REGISTER_RESET} />}\r\n      {verificationMessage !== '' && <ErrorMessage header=\"Auth Error\" message={verificationMessage} />}\r\n      {success && (\r\n        <SuccessMessage header=\"Register SuccessFully\" message={message} reset={userConstants.USER_REGISTER_RESET} />\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"User Name\"\r\n          name=\"name\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          margin=\"normal\"\r\n          placeholder=\"ex:- JohnDoe@gmail.com\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"password\"\r\n          placeholder=\"***********\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          value={password}\r\n          autoComplete=\"current-password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"password\"\r\n          placeholder=\"***********\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Confirm Password\"\r\n          id=\"password\"\r\n          value={confirmPassword}\r\n          autoComplete=\"current-password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\r\n          {loading ? <CircularProgress color=\"inherit\" className={classes.progressColor} /> : <>Register</>}\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account? <Link to={redirectUserToLoginRoute}>Login</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport SuccessMessage from '../components/Message/successMessage';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\r\nimport * as userAction from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const forgotPasswordDetails = useSelector((state) => state.forgotPasswordDetails);\r\n\r\n  const { loading, error, message, success } = forgotPasswordDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userAction.forgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\r\n      {success && <SuccessMessage header=\"Done\" message={message} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\r\n      <FormContainer>\r\n        <h1>Forgot Password</h1>\r\n        <Form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Your Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\r\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Send Request</>}\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport SuccessMessage from '../components/Message/successMessage';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\r\nimport * as routes from '../constants/routes';\r\nimport * as userAction from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [token, setToken] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const resetPasswordDetails = useSelector((state) => state.resetPasswordDetails);\r\n\r\n  const { loading, error, message, success } = resetPasswordDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n\r\n    const token = queryParams.get('token') ? queryParams.get('token').trim() : null;\r\n\r\n    if (token) {\r\n      setToken(token);\r\n    } else {\r\n      history.push({\r\n        pathname: routes.LOGIN,\r\n      });\r\n    }\r\n  }, [dispatch, token, history]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setTimeout(() => {\r\n        history.push({\r\n          pathname: routes.LOGIN,\r\n        });\r\n      }, 3000);\r\n    }\r\n  }, [dispatch, success, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const resetPassworData = {\r\n      newPassword,\r\n      token,\r\n    };\r\n    dispatch(userAction.resetPassword(resetPassworData));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\r\n      {success && <SuccessMessage header=\"Done\" message={message} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\r\n      <FormContainer>\r\n        <h1>Reset Password</h1>\r\n        <Form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"New Password\"\r\n            name=\"password\"\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\r\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Reset</>}\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../components/Message/errorMessage';\r\nimport FormContainer from '../components/FormContainer/FormContainer';\r\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\r\nimport * as routes from '../constants/routes';\r\nimport * as userAction from '../actions/userAction';\r\nimport * as userConstants from '../constants/userConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst EmailVerification = ({ location, history }) => {\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo, error, loading } = userAuthData;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : routes.HOME;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [dispatch, userInfo, redirect, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userAction.emailVerification(verificationCode));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.RESET} />}\r\n      <FormContainer>\r\n        <h1>Verify Your Email</h1>\r\n        <Form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"code\"\r\n            label=\"Verification Code\"\r\n            name=\"code\"\r\n            autoComplete=\"code\"\r\n            autoFocus\r\n            value={verificationCode}\r\n            onChange={(e) => setVerificationCode(e.target.value)}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\r\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Verify</>}\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailVerification;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './components/Header/index';\r\nimport Footer from './components/Footer/Footer';\r\nimport Home from './pages/Home';\r\nimport Product from './pages/Product';\r\nimport Login from './pages/Login';\r\nimport Cart from './pages/Cart';\r\nimport PrivateRoute from './routes/PrivateRoute';\r\nimport AdminRoute from './routes/AdminRoute';\r\nimport Shipping from './pages/Shipping';\r\nimport Payment from './pages/Payment';\r\nimport Profile from './pages/Profile';\r\nimport PlaceOrder from './pages/PlaceOrder';\r\nimport OrderList from './pages/OrdersList';\r\nimport ProductList from './pages/ProductList';\r\nimport UserList from './pages/UserList';\r\nimport EditUser from './pages/EditUser';\r\nimport EditProduct from './pages/EditProduct';\r\nimport Order from './pages/Order';\r\nimport Logout from './pages/Logout';\r\nimport Register from './pages/Register';\r\nimport ForgotPassword from './pages/ForgotPassword';\r\nimport ResetPassword from './pages/ResetPassword';\r\nimport EmailVerification from './pages/EmailVerification';\r\nimport * as routes from './constants/routes';\r\n\r\nrequire('dotenv').config();\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Switch>\r\n            <Route exact={true} path={routes.HOME} component={Home} />\r\n            <Route exact={true} path={routes.PRODUCT} component={Product} />\r\n            <Route exact={true} path={routes.LOGIN} component={Login} />\r\n            <Route exact={true} path={routes.CART} component={Cart} />\r\n            <Route exact={true} path={routes.FORGOT_PASSWORD} component={ForgotPassword} />\r\n            <Route exact={true} path={routes.RESET_PASSWORD} component={ResetPassword} />\r\n            <PrivateRoute exact={true} path={routes.SHIPPING} component={Shipping} />\r\n            <PrivateRoute exact={true} path={routes.PAYMENT} component={Payment} />\r\n            <PrivateRoute exact={true} path={routes.PLACE_ORDER} component={PlaceOrder} />\r\n            <PrivateRoute exact={true} path={routes.ORDER} component={Order} />\r\n            <PrivateRoute exact={true} path={routes.PROFILE} component={Profile} />\r\n            <AdminRoute exact={true} path={routes.ORDERS} component={OrderList} />\r\n            <AdminRoute exact={true} path={routes.PRODUCTS} component={ProductList} />\r\n            <AdminRoute exact={true} path={routes.PRODUCT_EDIT} component={EditProduct} />\r\n            <AdminRoute exact={true} path={routes.USERS} component={UserList} />\r\n            <AdminRoute exact={true} path={routes.USER_EDIT} component={EditUser} />\r\n            <Route exact={true} path={routes.REGISTER} component={Register} />\r\n            <Route exact={true} path={routes.EMAIL_VERIFICATION} component={EmailVerification} />\r\n            <Route exact={true} path={routes.LOGOUT} component={Logout} />\r\n          </Switch>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}